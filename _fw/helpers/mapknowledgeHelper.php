<?php

class mapknowledgeHelper extends Helper {

    var $array_mk;
    var $array_catalogs;
    var $array_documents;
    var $array_messages;
    var $name_current_object; // имя текущего объекта
    var $name_mapknowledge; // имя карты знаний
    var $array_active_alerts; // список активных оповещений
    var $button_insert; //отображение конпки "Вставить из буфера"

    function __construct() {
    }

    public function BlockComment($template = 'default') {

        foreach ($this->array_messages as $key => $value) {
            $date = date_create($value['td']);
            $this->array_messages[$key]['date'] = date_format($date,'H:i:s, j-m-y' );
        }

        $this->drawBlock('block-comment', $template);
    }

    public function BlockSearch() {
        $this->form_search['search-in-first-parent'] = 'В текущей карте знаний';
        parent::BlockSearch();
    }

    public function BlockNavigationChain($template = 'default')
    {

        $parents_path = $this->parents_path;
        /* получение списка родителей */
        if (empty($this->parents_path)) {
            $array_parents[0]['id'] = $this->id_current_object;
            $array_parents[0]['name'] = $this->name_current_object;
        }
        else {
            //получение пути
            $path = explode(';;', $parents_path['path']);
            //получение элементов пути
            foreach ($path as $element) {
                $array_parents[] = explode(':', $element);
            }

            foreach ($array_parents as $key => $value) {
                $array_parents[$key]['id'] = $value[0];
                $array_parents[$key]['type_object'] = _fw_translate_type_object($value[1], 'eng');
                $array_parents[$key]['name'] = $value[2];
                unset($array_parents[$key][0]);
                unset($array_parents[$key][1]);
                unset($array_parents[$key][2]);
            }

            $array_parents[count($array_parents)+1]['id'] = $this->id_current_object;
            $array_parents[count($array_parents)]['name'] = $this->name_current_object;
            $array_parents[count($array_parents)]['type_object'] = 'mapknowledge';
        }

        $this->array_parents_object = $array_parents;

        parent::BlockNavigationChain($template); // TODO: Change the autogenerated stub
    }

    public function LeftMenu() {
        $array_mk = $this->array_mk;
        $array_mk_owner = array();
        $array_mk_not_owner = array();

        foreach ($array_mk as $item) {
            if ($item['isOwner'] == 'f') {
                $array_mk_not_owner[] = $item;
            } elseif ($item['isOwner'] == 't') {
                $array_mk_owner[] = $item;
            }

        }
        $this->array_mk = array_merge($array_mk_owner, $array_mk_not_owner);
        parent::LeftMenu();
    }

    public function HideFormSearch(){
        $this->BlockForm('hide_form_search_template');
    }

}
