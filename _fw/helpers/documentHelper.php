<?php


class documentHelper extends Helper {

    var $id_current; // текущий доу
    var $id_parent; // родитель
    var $name_document; // имя документа
    var $title_block; // тайтл блока
    var $download_link; // ссылка на скачивание файла
    var $path_file; // путь к файлу
    var $name_file; // название файла с раширение

    function __construct()
    {
    }

    public function BlockNavigationChain($template = 'default')
    {
        $parents_path = $this->parents_path;
        /* получение списка родителей */
        if (empty($this->parents_path)) {
            $array_parents[0]['id'] = $this->id_current_object;
            $array_parents[0]['name'] = $this->name_current_object;
        }
        else {
            //получение пути
            $path = explode(';;', $parents_path['path']);
            //получение элементов пути
            foreach ($path as $element) {
                $array_parents[] = explode(':', $element);
            }
            foreach ($array_parents as $key => $value) {
                $array_parents[$key]['id'] = $value[0];
                $array_parents[$key]['type_object'] = _fw_translate_type_object($value[1], 'eng');
                $array_parents[$key]['name'] = $value[2];
                unset($array_parents[$key][0]);
                unset($array_parents[$key][1]);
                unset($array_parents[$key][2]);
            }

            if ($this->name_current_object) {
                $array_parents[count($array_parents)+1]['id'] = $this->id_current_object;
                $array_parents[count($array_parents)]['name'] = $this->name_current_object;
                $array_parents[count($array_parents)]['type_object'] = 'database';
            }
        }

        $this->array_parents_object = $array_parents;

        parent::BlockNavigationChain($template); // TODO: Change the autogenerated stub
    }

    public function FormAddEditDocument() {
        $this->MainFormAddEdit('step_1', 'step_2', 'step_3', 'step_4_document');
    }

    public function LinkDownloadFile() {
        $new_name_file = '';
        $result_explode = explode('/', $this->download_link);
        $name_file = $result_explode[count($result_explode)-1];
        $explode_name_file = explode('_', $name_file);
        array_shift($explode_name_file);
        if (count($explode_name_file)) {
            foreach ($explode_name_file as $key => $part) {
                if ($key == (count($explode_name_file)-1)) {
                    $new_name_file = $new_name_file . $part;
                } else {
                    $new_name_file = $new_name_file . $part . '_';
                }
            }
        }
        $this->Link('passport', $this->download_link, 'click-button', $new_name_file);
    }

    public function TitleNameDocument() {
        $this->Title('default', 'Паспорт документа «'.$this->name_document.'»');
    }

}