<?php

class searchHelper extends Helper {

    var $array_documents;
    var $search_result_tags;
    var $search_result_tags_input;
    var $place_name_search; // в search/result/ вывод текущей рубрики, где выполнился поиск
    var $show_form;

    function __construct() {

    }

    public function BlockNavigationChain($template = 'default', $key)
    {
        $name_type_parent = $this->array_documents[$key]['main_parent'];
        $parents_path = $this->array_documents[$key]['parent_path'];
        /* получение списка родителей */
        if (empty($this->array_documents[$key]['parent_path'])) {
            $array_parents[0]['id'] = $this->id_current_object;
            $array_parents[0]['name'] = $this->name_current_object;
        }
        else {
            //получение пути
            $path = explode(';;', $parents_path['path']);
            //получение элементов пути
            foreach ($path as $element) {
                $array_parents[] = explode(':', $element);
            }

            foreach ($array_parents as $key => $value) {
                $array_parents[$key]['id'] = $value[0];
                $array_parents[$key]['id_type_object'] = $value[1];
                $array_parents[$key]['name'] = $value[2];
                unset($array_parents[$key][0]);
                unset($array_parents[$key][1]);
                unset($array_parents[$key][2]);
            }
        }

        $this->drawBlock('navigation-chain', $template, array(
            'parent_path' => $array_parents,
            'main_parent' => $name_type_parent
        ));
    }

    public function BlockSearch($template = 'default')
    {
        if (count($this->search_result_tags)) {
            foreach ($this->search_result_tags as $key => $value) {
                $this->search_result_tags_input .= $value.'/';
            }
        }

        parent::BlockSearch($template); // TODO: Change the autogenerated stub
    }


}